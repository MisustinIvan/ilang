*Cheatsheet*
- { 'something' } means a variable amount of something, i.e 0...inf of something
- [ 'something' ] means optional something, i.e either nothing or 'something'
- foo | bar means foo or bar
- 'something' means a literal with the value 'something'

prog         : { fun_decl }

fun_decl     : type ident '(' parm_types ')' block_expr
parm_types   : [ type ident { ',' type ident } ]

block_expr  : '{' { expr ';' } [ expr ] '}'

expr        : bind_expr
            | return_expr
            | assg_expr
            | bin_expr

bind_expr   : 'let' ident ':' type '=' expr
return_expr : 'return' expr
assg_expr   : ident '=' expr
bin_expr    : pexpr { binop pexpr }
con_expr    : 'if' expr block_expr { 'else' block_expr }

pexpr       : literal
            | ident
            | call_expr
            | block_expr
            | sep_expr
            | con_expr

sep_expr    : '(' expr ')'
call_expr   : ident '(' [ expr { ',' expr } ] ')'
type        : '*'
ident       : '*'
literal     : '*'
binop       : '+' | '-' | '*' | '/' | '==' | '<' | '>' | '<=' | '>=' | '<<' | '>>' | '&&' | '||'
