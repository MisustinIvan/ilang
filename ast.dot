digraph AST {
  node [shape=box];
  node1 [label="Program",color="lightblue"]
  node2 [label="Function Declaration",color="red"]
  node1 -> node2
  node3 [label="Name: main"]
  node2 -> node3
  node4 [label="Return Type: int"]
  node2 -> node4
  node5 [label="Parameters",color="lightgreen"]
  node2 -> node5
  node6 [label="Body"]
  node2 -> node6
  node7 [label="BlockExpression",color="purple"]
  node6 -> node7
  node8 [label="Implicit Return Expression",color="lightgreen"]
  node7 -> node8
  node9 [label="ConditionalExpression",color="red"]
  node8 -> node9
  node10 [label="Condition"]
  node9 -> node10
  node11 [label="BlockExpression",color="purple"]
  node10 -> node11
  node12 [label="Implicit Return Expression",color="lightgreen"]
  node11 -> node12
  node13 [label="BindExpression",color="orange"]
  node12 -> node13
  node14 [label="Left: a"]
  node13 -> node14
  node15 [label="Lookup Value: a#0"]
  node14 -> node15
  node16 [label="Type: bool"]
  node13 -> node16
  node17 [label="Right"]
  node13 -> node17
  node18 [label="Literal",color="green"]
  node17 -> node18
  node19 [label="Type: bool"]
  node18 -> node19
  node20 [label="Value: false"]
  node18 -> node20
  node21 [label="IfBody"]
  node9 -> node21
  node22 [label="BlockExpression",color="purple"]
  node21 -> node22
  node23 [label="Implicit Return Expression",color="lightgreen"]
  node22 -> node23
  node24 [label="Literal",color="green"]
  node23 -> node24
  node25 [label="Type: int"]
  node24 -> node25
  node26 [label="Value: 69"]
  node24 -> node26
  node27 [label="ElseBody"]
  node9 -> node27
  node28 [label="BlockExpression",color="purple"]
  node27 -> node28
  node29 [label="Implicit Return Expression",color="lightgreen"]
  node28 -> node29
  node30 [label="Literal",color="green"]
  node29 -> node30
  node31 [label="Type: int"]
  node30 -> node31
  node32 [label="Value: 420"]
  node30 -> node32
}
